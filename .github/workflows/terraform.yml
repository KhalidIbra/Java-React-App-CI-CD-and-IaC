name: Terraform Infrastructure Pipeline

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Deployment environment (testing or production)'
        required: true
        default: 'testing'
      destroy:
        description: 'Set to true to destroy infrastructure'
        required: false
        default: 'false'

env:
  GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  GCP_CREDENTIALS_FILE: ${{ secrets.GCP_CREDENTIALS_FILE }}
  TF_VAR_GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  TF_VAR_GCP_CREDENTIALS_FILE: ${{ secrets.GCP_CREDENTIALS_FILE }}

jobs:
  terraform-init:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: 1.0.0

    - name: Initialize Terraform with Backend for Environment
      run: |
        terraform -chdir=IaC init \
        -backend-config="bucket=${{ secrets.TERRAFORM_STATE_BUCKET }}" \
        -backend-config="prefix=testing/terraform.tfstate"

  terraform-plan:
    runs-on: ubuntu-latest
    needs: terraform-init

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: 1.0.0

    - name: Terraform Plan for ${{ github.event.inputs.environment }} Environment
      run: terraform -chdir=terraform plan -var="environment=${{ github.event.inputs.environment }}"

  terraform-apply:
    runs-on: ubuntu-latest
    needs: terraform-plan
    if: ${{ github.event.inputs.destroy == 'false' }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: 1.0.0

    - name: Terraform Apply for ${{ github.event.inputs.environment }} Environment
      env:
        GOOGLE_APPLICATION_CREDENTIALS: ${{ secrets.GCP_CREDENTIALS_FILE }}
      run: terraform -chdir=terraform apply -auto-approve -var="environment=${{ github.event.inputs.environment }}"

  terraform-destroy:
    runs-on: ubuntu-latest
    needs: terraform-init
    if: ${{ github.event.inputs.destroy == 'true' }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: 1.0.0

    - name: Terraform Destroy for ${{ github.event.inputs.environment }} Environment
      env:
        GOOGLE_APPLICATION_CREDENTIALS: ${{ secrets.GCP_CREDENTIALS_FILE }}
      run: terraform -chdir=terraform destroy -auto-approve -var="environment=${{ github.event.inputs.environment }}"