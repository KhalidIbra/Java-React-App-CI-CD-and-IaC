name: Backend CI/CD Pipeline

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main
      - develop

  workflow_dispatch:
      
env:
  GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  BACKEND_IMAGE: gcr.io/${{ secrets.GCP_PROJECT_ID }}/backend

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
      with:
        path: .

    - name: Verify Directory Structure
      run: |
          echo "Listing directory structure:"
          ls -R .
    
    - name: Print current directory
      run: pwd


    - name: Set up JDK 
      uses: actions/setup-java@v2
      with:
        distribution: 'temurin'
        java-version: 23  

    - name: Build project with Maven
      run: mvn -B package --file backend/pom.xml
      

    - name: Set up GCloud CLI and authenticate to GCR
      uses: google-github-actions/auth@v0
      with:
        credentials_json: ${{ secrets.GCP_CREDENTIALS_FILE }}

    - name: Configure Docker for GCR
      run: gcloud auth configure-docker gcr.io

    - name: Build Docker image
      run: docker build -t gcr.io/${{ secrets.GCP_PROJECT_ID }}/my-image-repo:latest -f backend/Dockerfile .

    - name: Push Docker image to Container Registry
      run: docker push gcr.io/${{ secrets.GCP_PROJECT_ID }}/my-image-repo:latest

  deploy-to-testing:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/develop'

    steps:
    - name: Set up GCloud CLI
      uses: google-github-actions/setup-gcloud@v2
      with:
        project_id: ${{ secrets.GCP_PROJECT_ID }}
        credentials: ${{ secrets.GCP_CREDENTIALS_FILE }}

    - name: Set up kubectl
      run: |
        gcloud container clusters get-credentials my-cluster --zone us-central1-a --project ${{ secrets.GCP_PROJECT_ID }}

    - name: Deploy backend to GKE for testing
      run: |
        kubectl create namespace testing || true
        kubectl apply -f Backend/backend-deployment.yaml --namespace=testing
        kubectl rollout status deployment/backend -n testing

  deploy-to-production:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'

    steps:
    - name: Set up GCloud CLI
      uses: google-github-actions/setup-gcloud@v2
      with:
        project_id: ${{ secrets.GCP_PROJECT_ID }}
        credentials: ${{ secrets.GCP_CREDENTIALS_FILE }}

    - name: Set up kubectl
      run: |
        gcloud container clusters get-credentials my-cluster --zone us-central1-a --project ${{ secrets.GCP_PROJECT_ID }}

    - name: Deploy backend to GKE for prod
      run: |
        kubectl create namespace production || true
        kubectl apply -f Backend/backend-deployment.yaml --namespace=production
        kubectl rollout status deployment/backend -n production
