name: Frontend CI/CD Pipeline

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main
      - develop

env:
  GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  DOCKER_IMAGE: gcr.io/${{ secrets.GCP_PROJECT_ID }}/frontend

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '16'

    - name: Install dependencies
      run: npm install

    - name: Build React app
      run: npm run build

    - name: Build Docker image
      run: |
        docker build -t $DOCKER_IMAGE:latest .

    - name: Authenticate to GCR
      run: echo ${{ secrets.GCP_SA_KEY }} | docker login -u _json_key --password-stdin https://gcr.io

    - name: Push Docker image to GCR
      run: docker push $DOCKER_IMAGE:latest

  deploy-to-testing:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/develop'

    steps:
    - name: Set up GCloud CLI
      uses: google-github-actions/setup-gcloud@v2
      with:
        project_id: ${{ secrets.GCP_PROJECT_ID }}
        credentials_json: ${{ secrets.GCP_SA_KEY }}

    - name: Set up kubectl
      run: |
        gcloud container clusters get-credentials my-cluster --zone us-central1-a --project ${{ secrets.GCP_PROJECT_ID }}

    - name: Deploy to GKE - Testing
      run: |
        kubectl create namespace testing || true
        kubectl set image deployment/frontend frontend=$DOCKER_IMAGE:latest -n testing
        kubectl rollout status deployment/frontend -n testing

  deploy-to-production:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'

    steps:
    - name: Set up GCloud CLI
      uses: google-github-actions/setup-gcloud@v2
      with:
        project_id: ${{ secrets.GCP_PROJECT_ID }}
        credentials_json: ${{ secrets.GCP_SA_KEY }}

    - name: Set up kubectl
      run: |
        gcloud container clusters get-credentials my-cluster --zone us-central1-a --project ${{ secrets.GCP_PROJECT_ID }}

    - name: Deploy to GKE - Production
      run: |
        kubectl create namespace production || true
        kubectl set image deployment/frontend frontend=$DOCKER_IMAGE:latest -n production
        kubectl rollout status deployment/frontend -n production
